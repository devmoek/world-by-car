---
import Layout from '../../../layouts/Layout.astro';
import Card from '../../../components/Card.astro';

// Define TypeScript interfaces for post frontmatter and props
interface PostFrontmatter {
  slug: string;
  title: string;
  tags: string[];
}

interface Post {
  frontmatter: PostFrontmatter;
}

interface Params {
  tag: string;
}

interface Props {
  posts: Post[];
}

// Define types within getStaticPaths
export async function getStaticPaths(): Promise<Array<{ params: Params; props: Props }>> {
  const allPosts: Post[] = await Astro.glob('../../../content/posts/en/*.md');

  const uniqueTags = [...new Set(allPosts.flatMap((post) => post.frontmatter.tags))];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

// Extract params and props with types
const { tag } = Astro.params as Params;
const { posts } = Astro.props as Props;
---
<Layout title={tag}>
  <p class="text-white">Posts tagged with {tag}</p>
  <ul>
    {posts.map((post) => (
      <Card href={post.frontmatter.slug} title={post.frontmatter.title} />
    ))}
  </ul>
</Layout>
